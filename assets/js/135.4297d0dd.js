(window.webpackJsonp=window.webpackJsonp||[]).push([[135],{403:function(n,e,t){"use strict";t.r(e);var o=t(22),l=Object(o.a)({},function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h3",{attrs:{id:"vue插件开发和注册全局组件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue插件开发和注册全局组件","aria-hidden":"true"}},[n._v("#")]),n._v(" vue插件开发和注册全局组件")]),n._v(" "),t("h3",{attrs:{id:"插件的开发"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#插件的开发","aria-hidden":"true"}},[n._v("#")]),n._v(" 插件的开发")]),n._v(" "),t("ul",[t("li",[t("p",[n._v("需要暴露一个 "),t("strong",[n._v("install")]),n._v("这个方法")]),n._v(" "),t("pre",[t("code",[n._v("MyPlugin.install = function (Vue, options) {\n  // 1. 添加全局方法或属性\n  Vue.myGlobalMethod = function () {\n    // 逻辑...\n  }\n\n  // 2. 添加全局资源\n  Vue.directive('my-directive', {\n    bind (el, binding, vnode, oldVnode) {\n      // 逻辑...\n    }\n    ...\n  })\n\n  // 3. 注入组件选项\n  Vue.mixin({\n    created: function () {\n      // 逻辑...\n    }\n    ...\n  })\n\n  // 4. 添加实例方法\n  Vue.prototype.$myMethod = function (methodOptions) {\n    // 逻辑...\n  }\n}\n")])])])]),n._v(" "),t("h3",{attrs:{id:"注册全局组件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#注册全局组件","aria-hidden":"true"}},[n._v("#")]),n._v(" 注册全局组件")]),n._v(" "),t("ul",[t("li",[t("p",[n._v("我们写的组件 就是一个对象 我们导出的就是一个对象")]),n._v(" "),t("pre",[t("code",[n._v("  //  全局组件   vue 组件的写法 就是导出一个对象  而这个对象的实例就是vue组件\n  import Hello from './components/HelloWorld.vue';\n  console.log(Hello,'hello')\n  const plugins={}\n  plugins.install=function(Vue){\n      // 注册全局组件   前面是组件名  后面是组件\n      Vue.component(Hello.name,Hello)\n  }\n  \n  \n  \n  export default plugins;\t")])])])])])},[],!1,null,null,null);e.default=l.exports}}]);