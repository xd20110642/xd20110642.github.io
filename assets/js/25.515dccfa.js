(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{294:function(n,e,t){"use strict";t.r(e);var s=t(22),r=Object(s.a)({},function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h3",{attrs:{id:"axios使用小技巧"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#axios使用小技巧","aria-hidden":"true"}},[n._v("#")]),n._v(" axios使用小技巧")]),n._v(" "),t("hr"),n._v(" "),t("ul",[t("li",[t("p",[n._v("封装一个axios实例")]),n._v(" "),t("pre",[t("code",[n._v("  import axios from 'axios'\n  import base from './base'\n  var instance = axios.create({\n      timeout:5000,\n      baseURL:base.test\n  })\n\n  instance.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\n\n  /**\n  * 响应拦截\n  */\n  instance.interceptors.response.use(res => {\n      if(res.status == 200){\n          return res.data\n      }\n  },err => {\n          return Promise.reject(err);\n  })\n\n  export default instance;\n")])])]),n._v(" "),t("li",[t("p",[n._v("get和post、put等方法传参方式")]),n._v(" "),t("pre",[t("code",[n._v("  axios({\n  method: 'post',\n  url: '/user/12345',\n  data: {//是作为请求主题被发送的数据 也就是post等方法需要使用的  也就是需要序列化的  否则后台接收不到参数  \n      firstName: 'Fred',\n      lastName: 'Flintstone',\n      params:{//这里是get传参的方式\n\n      }\n      }\n  });           \n\n  axios.get('/user', { 是在data里面的 \n   params: {   //`params` 是即将与请求一起发送的 URL 参数\n      ID: 12345\n      }\n  })\n  .then(function (response) {\n      console.log(response);\n  })\n  .catch(function (error) {\n      console.log(error);\n  }); \n")])])])]),n._v(" "),t("p",[t("img",{attrs:{src:"http://test.bazirim.shop/axios.jpg",alt:"axios"}})])])},[],!1,null,null,null);e.default=r.exports}}]);