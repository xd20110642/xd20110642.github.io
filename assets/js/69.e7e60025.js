(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{338:function(n,e,t){"use strict";t.r(e);var r=t(22),l=Object(r.a)({},function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h3",{attrs:{id:"包装对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#包装对象","aria-hidden":"true"}},[n._v("#")]),n._v(" 包装对象")]),n._v(" "),t("hr"),n._v(" "),t("ul",[t("li",[t("p",[n._v("包装对象:"),t("strong",[n._v("指的是与数值、字符串、布尔值分别相对应的Number、String、Boolean三个原生对象。这三个原生对象可以把原始类型的值变成（包装成）对象")])]),n._v(" "),t("pre",[t("code",[n._v('  var v1 = new Number(123);\n  var v2 = new String(\'abc\');\n  var v3 = new Boolean(true);\n\n  typeof v1 // "object"\n  typeof v2 // "object"\n  typeof v3 // "object"\n\n  v1 === 123 // false\n  v2 === \'abc\' // false\n  v3 === true // false\n')])])]),n._v(" "),t("li",[t("p",[n._v("包装对象的目的:")]),n._v(" "),t("ul",[t("li",[n._v("首先是使得“对象”这种类型可以覆盖 JavaScript 所有的值，整门语言有一个通用的数据模型")]),n._v(" "),t("li",[n._v("其次是使得原始类型的值也有办法调用自己的方法。")])])]),n._v(" "),t("li",[t("p",[t("code",[n._v("Number、String和Boolean")]),n._v("这三个原生对象，如果不作为构造函数调用（即调用时不加new），而是作为普通函数调用，常常用于将任意类型的值转为数值、字符串和布尔值。")]),n._v(" "),t("pre",[t("code",[n._v("      // 字符串转为数值\n      Number('123') // 123\n\n      // 数值转为字符串\n      String(123) // \"123\"\n\n      // 数值转为布尔值\n      Boolean(123) // true\n")])])]),n._v(" "),t("li",[t("p",[n._v("原始类型与实例对象的自动转换")]),n._v(" "),t("ul",[t("li",[t("p",[n._v("引用类型是有方法和属性的,但是基本类型是没有")]),n._v(" "),t("ul",[t("li",[t("p",[n._v("字符串去调方法的时候，基本类型会找到对应的包装对象类型，然后包装对象把所有的属性和方法给了基本类型，然后包装类型消失。")]),n._v(" "),t("pre",[t("code",[n._v("  var str = 'abc';\n  str.length // 3\n\n  // 等同于\n  var strObj = new String(str)\n  strObj.length // 3\n")])])])]),n._v(" "),t("hr"),n._v(" "),t("pre",[t("code",[n._v("    var str = 'hello'; //string 基本类型\n    var s2 = str.charAt(0); //在执行到这一句的时候 后台会自动完成以下动作 ：\n    （ \n    var str = new String('hello'); // 1 找到对应的包装对象类型，然后通过包装对象创建出一个和基本类型值相同的对象\n    var s2 = str.chaAt(0); // 2 然后这个对象就可以调用包装对象下的方法，并且返回结给s2.\n    str = null;  //    3 之后这个临时创建的对象就被销毁了， str =null; \n    ） \n    alert(s2);//h \n    alert(str);//hello     注意这是一瞬间的动作 实际上我们没有改变字符串本身的值。就是做了下面的动作.这也是为什么每个字符串具有的方法并没有改变字符串本身的原因。\n")])]),n._v(" "),t("ul",[t("li",[t("p",[n._v("自动转换生成的包装对象是只读的，无法修改。所以，字符串无法添加新属性。")]),n._v(" "),t("pre",[t("code",[n._v("  var s = 'Hello World';\n  s.x = 123;//包装对象消失\n  s.x // undefined\n")])])]),n._v(" "),t("li",[t("p",[n._v("由于字符串、数字和布尔值的属性都是只读的，并且不能给它定义新属性，因此你需要明白它们是有别于对象的。")])])])])])])]),n._v(" "),t("p",[n._v("参考文章:\n"),t("a",{attrs:{href:"https://www.cnblogs.com/f6056/p/11817128.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("https://www.cnblogs.com/f6056/p/11817128.html"),t("OutboundLink")],1),n._v(" "),t("a",{attrs:{href:"https://blog.csdn.net/lhjuejiang/article/details/79623505",target:"_blank",rel:"noopener noreferrer"}},[n._v("https://blog.csdn.net/lhjuejiang/article/details/79623505"),t("OutboundLink")],1),n._v(" "),t("a",{attrs:{href:"https://www.jianshu.com/p/32465288e738",target:"_blank",rel:"noopener noreferrer"}},[n._v("https://www.jianshu.com/p/32465288e738"),t("OutboundLink")],1)])])},[],!1,null,null,null);e.default=l.exports}}]);