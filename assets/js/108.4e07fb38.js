(window.webpackJsonp=window.webpackJsonp||[]).push([[108],{377:function(n,s,a){"use strict";a.r(s);var e=a(22),t=Object(e.a)({},function(){var n=this,s=n.$createElement,a=n._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("function identity (value: Number) : Number {\n  return value;\n}\n\nconsole.log(identity(1)) // 1 \n这个函数只能传递number类型的参数 和返回number类型的值，如果我们想要使用string类型的参数和返回string类型的值。\n只有2种方法： \n1.修改value参数类型和修改函数返回值类型 为any\n2.新增一个函数\n\n\n如果我们采用了上面的描述方法 那么就会变的很不方便 也失去了使用ts的好处和意义\n这个时候 就用上了泛型来完成上面的需求\n\n第一个 <T> 是传递的类型\n第二步 链式传递把 类型传递复制给 参数的T 和函数返回值的T\nfunction identity <T>(value: T) : T {\n  return value;\n}\n\nconsole.log(identity<Number>(1)) // 1\n这个就代表 第一个T为number，参数value为1  然后结合上面的流程就可以看成是\n参数是number 返回值也是number\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br")])])])},[],!1,null,null,null);s.default=t.exports}}]);