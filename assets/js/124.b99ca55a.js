(window.webpackJsonp=window.webpackJsonp||[]).push([[124],{394:function(t,e,r){"use strict";r.r(e);var o=r(22),i=Object(o.a)({},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h3",{attrs:{id:"vuediff算法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#vuediff算法","aria-hidden":"true"}},[t._v("#")]),t._v(" Vuediff算法")]),t._v(" "),r("ol",[r("li",[r("p",[t._v("更新移动\n节点相同是可能会更新DOM 不会移动DOM。更新DOM 可能是更新文本内容，\n"),r("img",{attrs:{src:"http://kw.koznak.top/sources/img/otherimg/diff1.jpg"}}),t._v("\ndiff1图片里面 就是移动DOM\n"),r("img",{attrs:{src:"http://kw.koznak.top/sources/img/otherimg/diff2.jpg"}}),t._v("\n不设key，newCh和oldCh只会进行头尾两端的相互比较，设key后，除了头尾两端的比较外，还会从用key生成的对象oldKeyToIdx中查找匹配的节点，所以为节点设置key可以更高效的利用dom 如果有相同的key就直接复用跳过diff算法")]),t._v(" "),r("img",{attrs:{src:"http://kw.koznak.top/sources/img/otherimg/diff3.jpg"}})]),t._v(" "),r("li",[r("p",[t._v("diff算法是：能复用就复用 不能复用最后才新增和删除  核心是同级比较也就是相同父节点比较")])]),t._v(" "),r("li",[r("p",[t._v("原地复用 --\x3e 移动节点 --\x3e 删除节点 --\x3e 新增节点")])])]),t._v(" "),r("p",[t._v("参考文章:")]),t._v(" "),r("ol",[r("li",[r("a",{attrs:{href:"https://segmentfault.com/a/1190000020663531",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vue 虚拟dom diff原理详解"),r("OutboundLink")],1)])])])},[],!1,null,null,null);e.default=i.exports}}]);