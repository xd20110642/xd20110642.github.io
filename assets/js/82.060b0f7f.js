(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{347:function(n,s,a){"use strict";a.r(s);var e=a(22),t=Object(e.a)({},function(){var n=this,s=n.$createElement,a=n._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h3",{attrs:{id:"继承"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#继承","aria-hidden":"true"}},[n._v("#")]),n._v(" 继承")]),n._v(" "),a("ol",[a("li",[n._v("es6继承和es5继承的差异是：")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("        es6是先创建父类的this es5是先创建子类的this\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br")])]),a("ol",{attrs:{start:"2"}},[a("li",[n._v("es6的class 转换为es5是 使用的寄生组合式继承")]),n._v(" "),a("li",[n._v("原型链继承：")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("        特点：能继承原型链上的方法和属性，不能继承实例上的属性和方法\n        function Person{}\n        Son.prototype=new Person();\n        所有涉及到原型链继承的继承方式都需要修改子类构造函数的指向，否则子类实例的构造函数会指向父类 \n        Son.prototype.constructor=Son;\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br")])]),a("p",[n._v("4.构造函数继承")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("        特点:子类不能继承原型链上的属性和方法，可以继承实例属性和方法\n        function Person(){}\n        function Son(){\n            Person.call(this)\n        }\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br")])]),a("p",[n._v("5.组合继承")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("      特点:原型继承和构造函数继承的组合 结合了2者的优缺点\n      \n      function Person(name){\n          this.name=name\n      }\n      function Son(name){\n          Person.call(this,name);//构造函数继承 第二次调用\n      }\n      Son.prototype=new Person();//原型链继承 第一次调用\n      Son.prototype.constructor=Son;//son就是函数 \n6.原型式继承\n      \n      特点:利用一个空对象作为中介，将某个对象直接赋值给空对象构造函数的原型\n      \n      var obj={\n          name:'xiaomi',\n          say(){\n              \n          }\n      }\n      function object(obj){\n          return Object.create(obj);//返回一个新创建的对象 然后在新的对象上面新增属性和方法\n      }\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br")])]),a("p",[n._v("7.寄生组合继承")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("特点:目前最完美的继承方法 也是ES6class转换为ES5的方法\n        \n        function inheritPrototype (son,person) {\n            var prototype=Object.create(person.protottype);//浅拷贝父类的原型 返回一个新的对象\n            son.prototype=prototype;//子类的原型连 也就是原型链继承\n            son.prototype.constructor=son;//修复构造函数\n            \n            \n        }\n        \n        function Person(){\n            this.name='小米'\n        }\n        \n        function Son(){\n            Person.call(this);\n            \n        }\n        // 将父类原型指向子类\n        inheritPrototype(Son, Person);\n        var son=new Son()\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br")])]),a("p",[n._v("备注:只有函数拥有prototype属性")]),n._v(" "),a("p",[n._v("参考文章:")]),n._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.im/post/6844903696111763470#heading-5",target:"_blank",rel:"noopener noreferrer"}},[n._v("'参考链接1'"),a("OutboundLink")],1)]),n._v(" "),a("p",[a("a",{attrs:{href:"https://segmentfault.com/a/1190000015727237",target:"_blank",rel:"noopener noreferrer"}},[n._v("'参考链接2'"),a("OutboundLink")],1)])])},[],!1,null,null,null);s.default=t.exports}}]);