(window.webpackJsonp=window.webpackJsonp||[]).push([[138],{406:function(e,n,t){"use strict";t.r(n);var o=t(22),c=Object(o.a)({},function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h3",{attrs:{id:"组件自定义使用v-model"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#组件自定义使用v-model","aria-hidden":"true"}},[e._v("#")]),e._v(" 组件自定义使用v-model")]),e._v(" "),t("ul",[t("li",[e._v("如何防止在表单提交的时候 修改父组件传递的props\n并且在什么地方使用 v-model 是在父组件还是在子组件")])]),e._v(" "),t("p",[e._v("在父组件使用v-model")]),e._v(" "),t("p",[e._v("是子组件更新父组件的值 而不是 子组件修改父组件传递下来的\nprops\n所以我们就需要自己声明和实现一个 能在组件上使用的v-model")]),e._v(" "),t("p",[e._v("v-model其实就是一个语法糖\n就是组件的传值和父子组件的通讯")]),e._v(" "),t("p",[e._v("然后通过父子组件的通信来修改父组件中的值 这样就避免了 修改父组件传递下去的props 保证了数据的单向流动")]),e._v(" "),t("pre",[t("code",[e._v("\tVue.component('base-checkbox', {\n\t  model: {\n\t    prop: 'checked',//值\n\t    event: 'change',//触发的事件 \n\t  },\n\t  props: {\n\t    checked: Boolean//传递下来的默认的值\n\t  },\n\t  template: `\n<input\n  type=\"checkbox\"\n  v-bind:checked=\"checked\"\n  v-on:change=\"$emit('change', $event.target.checked)\"  触发父组件的监听事件 \n>\n")])]),e._v(" "),t("p",[e._v("`\n})")])])},[],!1,null,null,null);n.default=c.exports}}]);