(window.webpackJsonp=window.webpackJsonp||[]).push([[107],{376:function(e,t,r){"use strict";r.r(t);var n=r(22),a=Object(n.a)({},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h3",{attrs:{id:"接口"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#接口","aria-hidden":"true"}},[e._v("#")]),e._v(" 接口")]),e._v(" "),r("p",[e._v("接口就相当于是我们抽离出来的公共方法逻辑是一个对象  而且变量类型为接口 那么就必须实现和接口一样的东西")]),e._v(" "),r("h3",{attrs:{id:"接口对象"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#接口对象","aria-hidden":"true"}},[e._v("#")]),e._v(" 接口对象")]),e._v(" "),r("pre",[r("code",[e._v("interface Param{\n    xx:string\n}\nconst obj:Param={\n    xx:'123'\n}\n")])]),e._v(" "),r("ul",[r("li",[e._v("obj的类型是Param 也就是obj必须包含接口里面所定义的东西 否则就会报错")])]),e._v(" "),r("h3",{attrs:{id:"接口的函数类型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#接口的函数类型","aria-hidden":"true"}},[e._v("#")]),e._v(" 接口的函数类型")]),e._v(" "),r("ul",[r("li",[r("p",[e._v("这个是定义函数的类型")])]),e._v(" "),r("li",[r("p",[e._v("它就像是一个"),r("code",[e._v("只有参数列表和返回值类型的函数定义")]),e._v("。"),r("code",[e._v("参数列表里的每个参数都需要名字和类型。")]),e._v(" 就是定义函数的接口")]),e._v(" "),r("pre",[r("code",[e._v("  interface SearchFunc {\n          (source: string, subString: string): boolean;\n  }\n")])])])]),e._v(" "),r("h3",{attrs:{id:"接口的方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#接口的方法","aria-hidden":"true"}},[e._v("#")]),e._v(" 接口的方法")]),e._v(" "),r("ul",[r("li",[r("p",[e._v("这个叫做接口里面的方法")]),e._v(" "),r("pre",[r("code",[e._v("  interface ClockInterface {\n      currentTime: Date;\n      setTime(d: Date);\n  }\n\n  class Clock implements ClockInterface {\n      currentTime: Date;\n      setTime(d: Date) {\n          this.currentTime = d;\n      }\n      constructor(h: number, m: number) { }\n  }\n")])])])])])},[],!1,null,null,null);t.default=a.exports}}]);