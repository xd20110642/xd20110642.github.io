(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{322:function(v,_,t){"use strict";t.r(_);var i=t(22),n=Object(i.a)({},function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h3",{attrs:{id:"javascript权威指南-学习笔记"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#javascript权威指南-学习笔记","aria-hidden":"true"}},[v._v("#")]),v._v(" JavaScript权威指南  学习笔记")]),v._v(" "),t("p",[v._v("###表达式和运算符")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("属性访问表达式")]),v._v(" "),t("pre",[t("code",[v._v("var o ={name:'x'}\no.name === o['name'] 如果属性不存在 那么就会返回一个undefined o.xd ===> undefined\n")])])]),v._v(" "),t("li",[t("p",[v._v("调用表达式 包括"),t("strong",[v._v("一对圆括号和左圆括号之前的表单式")])])]),v._v(" "),t("li",[t("p",[v._v("###对象")])]),v._v(" "),t("li",[t("p",[v._v("属性特性")]),v._v(" "),t("ul",[t("li",[v._v("可写 ===> 是否可以设置改属性的值")]),v._v(" "),t("li",[v._v("可枚举 ===> 是否可以通过for/in循环返回该属性")]),v._v(" "),t("li",[v._v("可配置 ===> 是否可以删除或修改该属性")])])]),v._v(" "),t("li",[t("p",[v._v("属性名必须为"),t("strong",[v._v("字符串或symbol")])])]),v._v(" "),t("li",[t("p",[v._v("原型")]),v._v(" "),t("ul",[t("li",[v._v("Object.prototype是最底层的，其他的原型对象都是继承之他")])])]),v._v(" "),t("li",[t("p",[v._v("对象方法")]),v._v(" "),t("ul",[t("li",[v._v("Object.create()  创建一个新对象")])])]),v._v(" "),t("li",[t("p",[v._v("属性的访问")]),v._v(" "),t("ul",[t("li",[v._v("如果是使用"),t("strong",[v._v("点语法")]),v._v(" 那么obj.xx  xx不需要为字符串")]),v._v(" "),t("li",[v._v("如果是使用"),t("strong",[v._v("数组语法")]),v._v(" 那么obj[xx]  "),t("strong",[v._v("xx必须为字符串 同理如果对象的key为数字 那么就只能使用数组语法来获取")])]),v._v(" "),t("li",[v._v("属性访问错误\n"),t("ul",[t("li",[v._v("查询一个不存在的属性 会返回undefined")])])])])]),v._v(" "),t("li",[t("p",[v._v("检查属性: 判断某个属性是不是存在于某个对象中 in、hasOwnPreperty()、propertyIsEnumerable()")]),v._v(" "),t("ul",[t("li",[v._v("in运算符 属性名(字符串) in 对象 如果有 那么就是true or false "),t("strong",[v._v("自有属性和继承都能判断")])]),v._v(" "),t("li",[v._v("hasOwnPreperty "),t("strong",[v._v("检查是否是对象的自有属性")]),v._v(' 对象.hasOwnPreperty("属性名") '),t("strong",[v._v("如果没有或者是继承的都会返回false")])])])]),v._v(" "),t("li",[t("p",[v._v("对象的三个属性")]),v._v(" "),t("ul",[t("li",[v._v("原型属性\n"),t("ul",[t("li",[v._v("检查一个对象是否是另一个对象的原型(或在原型链中) isPrototypeOf()")])])])])]),v._v(" "),t("li",[t("p",[v._v("对象转化为字符串**(也可以用于深拷贝)**")]),v._v(" "),t("ul",[t("li",[v._v("JSON.stringif() ===> 对象转换为 json字符串")]),v._v(" "),t("li",[v._v("JSON.parse()  ===> json字符串转换为 对象")])])])]),v._v(" "),t("h3",{attrs:{id:"数组"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数组","aria-hidden":"true"}},[v._v("#")]),v._v(" 数组")]),v._v(" "),t("ul",[t("li",[v._v("数组方法\n"),t("ul",[t("li",[t("p",[v._v("slice()")]),v._v(" "),t("ul",[t("li",[v._v("返回指定数组的一个片段或者子数组")]),v._v(" "),t("li",[t("strong",[v._v("返回内容是 包含第一个参数指定的位置和所以到 但是 不含第二个参数指定位置之间的所有数组元素")])])])]),v._v(" "),t("li",[t("p",[v._v("可以使用负数或非整数来索引数组，在这样的情况下数值转换为字符串，字符串为属性名")]),v._v(" "),t("pre",[t("code",[v._v("  a[-1.1]=true //创建一个名为'-1.1'的属性;\n")])])]),v._v(" "),t("li",[t("p",[v._v("如果使用了非负整数的字符串，那么就是当做数组索引 而非是对象属性.")]),v._v(" "),t("pre",[t("code",[v._v("  a[1.00]//和a[1]是一样的\n")])])])])]),v._v(" "),t("li",[v._v("判断数组\n"),t("ul",[t("li",[v._v("Array.isArray")]),v._v(" "),t("li",[v._v("Object.prototype.toString.call(xx)")])])])]),v._v(" "),t("h3",{attrs:{id:"函数（函数即对象）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#函数（函数即对象）","aria-hidden":"true"}},[v._v("#")]),v._v(" 函数（函数即对象）")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("函数名的用途就像是变量的名字 我们调用函数 就好比使用变量一样")])]),v._v(" "),t("li",[t("p",[v._v("函数带小括号和不带小括号的区别")]),v._v(" "),t("pre",[t("code",[v._v("\t\tfunction name(){} \n\t\t\n\t\tname() ===》 函数已经被调用了  name 只是一个指针 指向的是我们定义的函数体 需要我们手动去触发调用它\n")])])]),v._v(" "),t("li",[t("p",[v._v("函数表达式")]),v._v(" "),t("pre",[t("code",[v._v(" \t声明一个变量 和一个匿名函数  然后把匿名函数赋值给变量 然后调用变量 就可以执行这个函数了\n \tlet square=function(x){return x}\n")])])]),v._v(" "),t("li",[t("p",[v._v("函数如果没有return 那么它就只会执行函数体中的每一条语句 并且返回undefined值给调用者")])]),v._v(" "),t("li",[t("p",[t("s",[v._v("this指向 谁调用函数或者方法 那么就指向谁  (脑海中有很多版本了 就不一样写出来了 自己理解)")])])]),v._v(" "),t("li",[t("p",[t("strong",[v._v("this没有作用域的现在，嵌套的函数是不会从调用它的函数中继承this 如果嵌套函数作为方法调用，其this指向调用它的对象。如果是嵌套函数作为函数调用，其this值不是全局对象(非严格模式) 就是undefined(严格模式)")])]),v._v(" "),t("pre",[t("code",[v._v("  function name(){\n  \t====> this 指向xxx\n  \tname2() ===> this指向全局\n  } \n  function name2(){}\n  xxx.onclick=name 这样就是我们需要去触发  如果是带了小括号 那么就是已经触发了 \n")])])]),v._v(" "),t("li",[t("p",[v._v("使用call和apply 改变this 指向")]),v._v(" "),t("pre",[t("code",[v._v("  xxx.call(this)  那么xxx的this 就变成了 我们传入的this\n")])])]),v._v(" "),t("li",[t("p",[v._v("立即执行函数")]),v._v(" "),t("pre",[t("code",[v._v("  接受函数定义并立即调用它\n  (function(){}())\t\t\t\t\n")])])])]),v._v(" "),t("h3",{attrs:{id:"闭包"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#闭包","aria-hidden":"true"}},[v._v("#")]),v._v(" 闭包")])])},[],!1,null,null,null);_.default=n.exports}}]);