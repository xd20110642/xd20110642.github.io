(window.webpackJsonp=window.webpackJsonp||[]).push([[137],{404:function(n,e,t){"use strict";t.r(e);var o=t(22),d=Object(o.a)({},function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h3",{attrs:{id:"父组件监听子组件生命周期"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#父组件监听子组件生命周期","aria-hidden":"true"}},[n._v("#")]),n._v(" 父组件监听子组件生命周期")]),n._v(" "),t("hr"),n._v(" "),t("ul",[t("li",[t("p",[n._v("第一种方法:通过事件监听来完成 使用父子组件通信来完成触发")]),n._v(" "),t("pre",[t("code",[n._v('  // Parent.vue\n  <Child @mounted="doSomething"/>\n      \n  // Child.vue \n  mounted() {\n  this.$emit("mounted");\n  }\n')])])]),n._v(" "),t("li",[t("p",[n._v("第二种方法:通过@hook 来监听  这样就可以避免使用$emit来触发事件")]),n._v(" "),t("pre",[t("code",[n._v("  //  Parent.vue\n  <Child @hook:mounted=\"doSomething\" ></Child>\n\n  doSomething() {\n  console.log('父组件监听到 mounted 钩子函数 ...');\n  },\n      \n  //  Child.vue\n  mounted(){\n  console.log('子组件触发 mounted 钩子函数 ...');\n  },    \n      \n  // 以上输出顺序为：\n  // 子组件触发 mounted 钩子函数 ... \n  // 父组件监听到 mounted 钩子函数 ...     \n")])])])])])},[],!1,null,null,null);e.default=d.exports}}]);