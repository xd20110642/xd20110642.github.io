(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{292:function(e,n,t){"use strict";t.r(n);var i=t(22),o=Object(i.a)({},function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h3",{attrs:{id:"h5监听键盘事件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#h5监听键盘事件","aria-hidden":"true"}},[e._v("#")]),e._v(" H5监听键盘事件")]),e._v(" "),t("hr"),e._v(" "),t("p",[e._v("获知软键盘的弹起还是收起状态很重要，后面的兼容处理都要以此为前提。然而，H5 并没有直接监听软键盘的原生事件，只能通过软键盘弹起或收起，引发页面其他方面的表现间接监听，曲线救国。并且，在 IOS 和 Android 上的表现不尽相同。")]),e._v(" "),t("p",[e._v("IOS 软键盘弹起表现")]),e._v(" "),t("p",[e._v("在 IOS 上，输入框(input、textarea 或 富文本)获取焦点，键盘弹起，页面(webview)并没有被压缩，或者说高度(height)没有改变，只是页面(webview)整体往上滚了，且最大滚动高度(scrollTop)为软键盘高度。")]),e._v(" "),t("p",[e._v("Android 软键盘弹起表现")]),e._v(" "),t("p",[e._v("同样，在 Android 上，输入框获取焦点，键盘弹起，但是页面(webview)高度会发生改变，一般来说，高度为可视区高度(原高度减去软键盘高度)，除了因为页面内容被撑开可以产生滚动，webview 本身不能滚动。")]),e._v(" "),t("p",[e._v("IOS 软键盘收起表现")]),e._v(" "),t("p",[e._v("触发软键盘上的“收起”按钮键盘或者输入框以外的页面区域时，输入框失去焦点，软键盘收起。")]),e._v(" "),t("p",[e._v("Android 软键盘收起表现")]),e._v(" "),t("p",[e._v("触发输入框以外的区域时，输入框失去焦点，软键盘收起。但是，触发键盘上的收起按钮键盘时，输入框并不会失去焦点，同样软键盘收起。")]),e._v(" "),t("p",[e._v("监听软键盘弹起和收起")]),e._v(" "),t("p",[e._v("综合上面键盘弹起和收起在 IOS 和 Android 上的不同表现，我们可以分开进行如下处理来监听软键盘的弹起和收起：")]),e._v(" "),t("p",[e._v("在 IOS 上，监听输入框的 focus 事件来获知软键盘弹起，监听输入框的 blur 事件获知软键盘收起。\n在 Android 上，监听 webview 高度会变化，高度变小获知软键盘弹起，否则软键盘收起。")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("安卓")]),e._v(" "),t("pre",[t("code",[e._v("      var  originHeight = document.documentElement.clientHeight || document.body.clientHeight;//获取原本的可视区域高度\n      console.log(\"旧\", originHeight)\n          window.addEventListener('resize',function(){\n          var resizeHeight = document.documentElement.clientHeight || document.body.clientHeight;  //获取改变后的可视区域高度\n              console.log('新', resizeHeight)\n              // 在 Android 上，监听 webview 高度会变化，高度变小获知软键盘弹起，否则软键盘收起。 \n              if(originHeight>resizeHeight){//键盘弹起\n                  document.querySelector('.footer').style.display = 'none'\n              }else{//键盘收起\n                  document.querySelector('.footer').style.display = 'block'\n              }\n          })\n")])])]),e._v(" "),t("li",[t("p",[e._v("iOS")]),e._v(" "),t("pre",[t("code",[e._v("    //注意在安卓端也会监听到input失去焦点事件 所以必须要判断条件  \n    document.body.addEventListener('focusin', () => {  //软键盘弹起事件 获取焦点\n          console.log(\"键盘弹起\");\n          // alert('1')\n          document.querySelector('.footer').style.display = 'none'\n      })\n  document.body.addEventListener('focusout', () => { //软键盘关闭事件 失去焦点\n          console.log(\"键盘收起\")\n          document.querySelector('.footer').style.display = 'block'\n      })                  \n")])])]),e._v(" "),t("li",[t("p",[e._v("iOS微信留白")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("在失去焦点的时候 触发(也就是在键盘收起的时候处理)")]),e._v(" "),t("p",[e._v("//微信版本bug解决方法")]),e._v(" "),t("pre",[t("code",[e._v("  function resolveBug( e ){\n      setTimeout(function(){\n          if(document.activeElement.tagName == 'INPUT' || document.activeElement.tagName == 'TEXTAREA'){\n              return\n          }\n          let result = 'pc';\n          if(/(iPhone|iPad|iPod|iOS)/i.test(navigator.userAgent)) { //判断iPhone|iPad|iPod|iOS\n              result = 'ios'\n          }else if(/(Android)/i.test(navigator.userAgent)) {  //判断Android\n              result = 'android'\n          }\n          if( result = 'ios' ){\n              document.activeElement.scrollIntoViewIfNeeded(true); //获取到焦点的属性滚动到可视区域\n          }\n      },10)\n  }\n")])])])])]),e._v(" "),t("li",[t("p",[e._v("弹起软键盘始终让输入框滚动到可视区")])])]),e._v(" "),t("p",[e._v("有时我们会做一个输入表单，有很多输入项，输入框获取焦点，弹起软键盘。当输入框位于页面下部位置时，在 IOS 上，会将 webview 整体往上滚一段距离，使得该获取焦点的输入框自动处于可视区，而在 Android 则不会这样，它只会改变页面高度，而不会去滚动到当前焦点元素到可视区。")]),e._v(" "),t("p",[e._v("由于上面已经实现监听 IOS 和 Android 键盘弹起和收起，在这里，只需在 Android 键盘弹起后，将焦点元素滚动(scrollIntoView())到可视区。")]),e._v(" "),t("pre",[t("code",[e._v("    // 获取到焦点元素滚动到可视区  \n\n    function activeElementScrollIntoView(activeElement, delay) {  \n\n    var editable = activeElement.getAttribute('contenteditable')  \n\n    // 输入框、textarea或富文本获取焦点后没有将该元素滚动到可视区  \n\n    if (activeElement.tagName == 'INPUT' || activeElement.tagName == 'TEXTAREA' || editable === '' || editable) {  \n    setTimeout(function () {  activeElement.scrollIntoView()}, delay) }  \n     }  \n    // Android 键盘弹起后操作  \n\n    \n    activeElementScrollIntoView($input, 1000);  \n")])]),e._v(" "),t("ul",[t("li",[e._v("参考文章")])]),e._v(" "),t("p",[t("a",{attrs:{href:"http://www.louyaning.cn/article/51CTO-%E7%BC%96%E8%BE%91?id=6698",target:"_blank",rel:"noopener noreferrer"}},[e._v("参考1"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"https://blog.csdn.net/yanhailun/article/details/85940081",target:"_blank",rel:"noopener noreferrer"}},[e._v("参考2"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.jianshu.com/p/8fe6a0a9971d",target:"_blank",rel:"noopener noreferrer"}},[e._v("参考3"),t("OutboundLink")],1)])])},[],!1,null,null,null);n.default=o.exports}}]);