(window.webpackJsonp=window.webpackJsonp||[]).push([[97],{370:function(n,e,r){"use strict";r.r(e);var t=r(22),a=Object(t.a)({},function(){var n=this,e=n.$createElement,r=n._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[r("h3",{attrs:{id:"如何在react中使用dva进行数据管理开发"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#如何在react中使用dva进行数据管理开发","aria-hidden":"true"}},[n._v("#")]),n._v(" 如何在react中使用dva进行数据管理开发")]),n._v(" "),r("p",[n._v("在进行react项目开发的时候,如何进行数据管理就成了我们讨论的问题，在vue中我们可以使用vuex来进行状态管理。但是在react中使用我们可以使用redux等等之类的。但是在国内我们可以使用Dva来进行数据管理。\n但是 dva是自带了一个路由，如果在我们的项目中 不需要使用到路由 那么引入路由就是多余的依赖,那么这个时候 我如何抛弃掉路由 只使用数据管理呢？ 我在官网查询了很久 发现了官方都是一套流程的 没有单独使用数据管理抛弃路由的 。在查阅了很多资料以后 总于发现了 如何只使用数据管理而不依赖路由。 记录如下")]),n._v(" "),r("ul",[r("li",[n._v("第一个"),r("code",[n._v("dva.js")]),n._v(" 是分为三个核心库 "),r("code",[n._v("dva-core dva-immer dva-redux-sage")]),n._v(" "),r("ul",[r("li",[r("p",[n._v("我们如果只依赖于数据管理  需要 手动安装 dva-core 这个核心库 和 react-redux 这2个npm插件")]),n._v(" "),r("pre",[r("code",[n._v("    import {create} from 'dva-core'\n    import {Provider} from 'react-redux'\n\n    实例化 dva-core\n    const app=create();\n    app.model({ //添加模块\n\n    })\n    app.stare();//初始化\n    const stroe=app._store; //获取私有属性 也是我们的状态管理仓库\n    function App(){\n        return (\n            <Provider store={stroe}> //使用Provider为根组件 这样就可以把状态在全局使用了\n            </Provider>\n        )\n    }\n\n    无状态和有状态子组件 获取状态 \n    import {connect} from 'react-redux'\n    function Main(props){\n        console.log(\"props\",props)\n        return (\n            <main>\n                <Question></Question>\n                <RankList></RankList>\n            </main>\n        )\n    }\n    export default connect(({demo={}}) => ({\n        demo\n    }))(Main)\n\n    其他的操作 参考 Dva官方文档\n")])])])])])]),n._v(" "),r("p",[n._v("参考文章:")]),n._v(" "),r("ol",[r("li",[n._v("https://segmentfault.com/q/1010000015766804")]),n._v(" "),r("li")])])},[],!1,null,null,null);e.default=a.exports}}]);