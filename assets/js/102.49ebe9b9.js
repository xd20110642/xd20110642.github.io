(window.webpackJsonp=window.webpackJsonp||[]).push([[102],{371:function(t,r,a){"use strict";a.r(r);var s=a(22),i=Object(s.a)({},function(){var t=this,r=t.$createElement,a=t._self._c||r;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h3",{attrs:{id:"栈和队列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#栈和队列","aria-hidden":"true"}},[t._v("#")]),t._v(" 栈和队列")]),t._v(" "),a("hr"),t._v(" "),a("h3",{attrs:{id:"栈是一种遵从后进先出-lifo-原则的有序集合。新添加的或待删除的元素都保存在栈的同一端，称作栈顶，另一端就叫栈底。在栈里，新元素都靠近栈顶，旧元素都接近栈底。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#栈是一种遵从后进先出-lifo-原则的有序集合。新添加的或待删除的元素都保存在栈的同一端，称作栈顶，另一端就叫栈底。在栈里，新元素都靠近栈顶，旧元素都接近栈底。","aria-hidden":"true"}},[t._v("#")]),t._v(" 栈是一种遵从"),a("strong",[t._v("后进先出")]),t._v("(LIFO)原则的有序集合。新添加的或待删除的元素都保存在栈的同一端，称作栈顶，另一端就叫栈底。在栈里，新元素都靠近栈顶，旧元素都接近栈底。")]),t._v(" "),a("hr"),t._v(" "),a("h3",{attrs:{id:"队列是遵循fifo-first-in-first-out，先进先出，也称为先来先服务-原则的一组有序的项。队列在尾部添加新元素，并从顶部移除元素。最新添加的元素必须排在队列的末尾。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#队列是遵循fifo-first-in-first-out，先进先出，也称为先来先服务-原则的一组有序的项。队列在尾部添加新元素，并从顶部移除元素。最新添加的元素必须排在队列的末尾。","aria-hidden":"true"}},[t._v("#")]),t._v(" 队列是遵循FIFO(First In First Out，先进先出，也称为先来先服务)原则的一组有序的项。队列在尾部添加新元素，并从顶部移除元素。最新添加的元素必须排在队列的末尾。")])])},[],!1,null,null,null);r.default=i.exports}}]);